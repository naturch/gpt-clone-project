export interface Message {
  id: string;
  chatId: string;
  sender: "user" | "bot";
  text: string;
  createdAt: string;
}
export const allMessages: Message[] = [
  {
    id: "m1",
    chatId: "c1",
    sender: "user",
    text: "전산학 개론에서 나오는 튜링 머신 개념 간단히 설명해줘.",
    createdAt: "2025-05-03T14:00:00",
  },
  {
    id: "m2",
    chatId: "c1",
    sender: "bot",
    text: "튜링 머신은 이론적인 계산 모델이야. 무한한 테이프와 헤드로 구성돼서, 모든 계산 가능한 문제를 표현할 수 있어.",
    createdAt: "2025-05-03T14:01:00",
  },
  {
    id: "m3",
    chatId: "c1",
    sender: "user",
    text: "컴퓨터 구조랑은 어떤 차이야?",
    createdAt: "2025-05-03T14:02:00",
  },
  {
    id: "m4",
    chatId: "c1",
    sender: "bot",
    text: "컴퓨터 구조는 실제 컴퓨터 하드웨어 설계를 다루고, 튜링 머신은 계산 가능성 이론 중심이야.",
    createdAt: "2025-05-03T14:03:00",
  },
  {
    id: "m5",
    chatId: "c1",
    sender: "user",
    text: "그럼 알고리즘 시간 복잡도 계산하는 법도 알려줘.",
    createdAt: "2025-05-03T14:04:00",
  },
  {
    id: "m6",
    chatId: "c1",
    sender: "bot",
    text: "보통 반복문의 중첩 정도에 따라 결정돼. 예를 들어 이중 for문이면 O(n^2)이야.",
    createdAt: "2025-05-03T14:05:00",
  },
  {
    id: "m7",
    chatId: "c1",
    sender: "user",
    text: "O(n log n)은 언제 나와?",
    createdAt: "2025-05-03T14:06:00",
  },
  {
    id: "m8",
    chatId: "c1",
    sender: "bot",
    text: "대표적으로 병합 정렬이나 퀵 정렬에서 나와. 분할 정복 방식이 log n 성분을 만들거든.",
    createdAt: "2025-05-03T14:07:00",
  },
  {
    id: "m9",
    chatId: "c1",
    sender: "user",
    text: "그림으로 보여줄 수 있어?",
    createdAt: "2025-05-03T14:08:00",
  },
  {
    id: "m10",
    chatId: "c1",
    sender: "bot",
    text: "아쉽게도 지금은 텍스트만 가능해. 하지만 divide-and-conquer 구조를 생각하면 돼!",
    createdAt: "2025-05-03T14:09:00",
  },
  {
    id: "m11",
    chatId: "c1",
    sender: "user",
    text: "트리 구조랑 관련 있나?",
    createdAt: "2025-05-03T14:10:00",
  },
  {
    id: "m12",
    chatId: "c1",
    sender: "bot",
    text: "맞아! 재귀적으로 나눠지는 트리 깊이가 log n이기 때문에 그게 시간 복잡도에 반영돼.",
    createdAt: "2025-05-03T14:11:00",
  },
  {
    id: "m13",
    chatId: "c1",
    sender: "user",
    text: "정렬 알고리즘 전체 요약해줘.",
    createdAt: "2025-05-03T14:12:00",
  },
  {
    id: "m14",
    chatId: "c1",
    sender: "bot",
    text: "- 버블: O(n^2), 쉬움\n- 삽입: O(n^2), 거의 정렬된 데이터에 적합\n- 병합/퀵: O(n log n), 실제로 많이 씀",
    createdAt: "2025-05-03T14:13:00",
  },
  {
    id: "m15",
    chatId: "c1",
    sender: "user",
    text: "좋아. 그럼 OS 파트도 나중에 질문해도 되지?",
    createdAt: "2025-05-03T14:14:00",
  },
  {
    id: "m16",
    chatId: "c1",
    sender: "bot",
    text: "물론이지! 운영체제, 네트워크, 데이터베이스 전부 가능해.",
    createdAt: "2025-05-03T14:15:00",
  },
  {
    id: "m17",
    chatId: "c1",
    sender: "user",
    text: "좋아. 일단 이거 정리해서 노션에 옮겨볼게.",
    createdAt: "2025-05-03T14:16:00",
  },
  {
    id: "m18",
    chatId: "c1",
    sender: "bot",
    text: "필요하면 요약해서 마크다운으로도 줄 수 있어!",
    createdAt: "2025-05-03T14:17:00",
  },
  {
    id: "m19",
    chatId: "c1",
    sender: "user",
    text: "아 좋아. 다음엔 기출 문제 위주로 가보자.",
    createdAt: "2025-05-03T14:18:00",
  },
  {
    id: "m20",
    chatId: "c1",
    sender: "bot",
    text: "기출 문제 정리해서 준비할게. 다음에 또 보자!",
    createdAt: "2025-05-03T14:19:00",
  },
  {
    id: "m21",
    chatId: "c2",
    sender: "user",
    text: "Diffusion 모델 논문 하나 요약해줘.",
    createdAt: "2025-04-24T08:44:00",
  },
  {
    id: "m22",
    chatId: "c2",
    sender: "bot",
    text: "DDPM 논문은 이미지를 노이즈에서 점점 복원하는 방식이야. 점진적 학습이 핵심이지.",
    createdAt: "2025-04-24T08:45:00",
  },
  {
    id: "m23",
    chatId: "c2",
    sender: "user",
    text: "어떤 데이터셋으로 실험했어?",
    createdAt: "2025-04-24T08:46:00",
  },
  {
    id: "m24",
    chatId: "c2",
    sender: "bot",
    text: "CIFAR-10, LSUN, CelebA 같은 이미지셋으로 성능을 비교했어.",
    createdAt: "2025-04-24T08:47:00",
  },
  {
    id: "m25",
    chatId: "c2",
    sender: "user",
    text: "그럼 GPT랑은 뭐가 달라?",
    createdAt: "2025-04-24T08:48:00",
  },
  {
    id: "m26",
    chatId: "c2",
    sender: "bot",
    text: "GPT는 텍스트 생성, Diffusion은 이미지 생성이 주된 용도야. 구조 자체도 완전 달라.",
    createdAt: "2025-04-24T08:49:00",
  },
  {
    id: "m27",
    chatId: "c3",
    sender: "user",
    text: "파이썬에서 큐는 어떻게 구현해?",
    createdAt: "2025-03-12T17:54:00",
  },
  {
    id: "m28",
    chatId: "c3",
    sender: "bot",
    text: "collections.deque를 사용하면 양방향 큐를 쉽게 구현할 수 있어.",
    createdAt: "2025-03-12T17:55:00",
  },
  {
    id: "m29",
    chatId: "c3",
    sender: "user",
    text: "스택은 그냥 리스트로 돼?",
    createdAt: "2025-03-12T17:56:00",
  },
  {
    id: "m30",
    chatId: "c3",
    sender: "bot",
    text: "응, 리스트의 append()와 pop()을 이용하면 스택처럼 쓸 수 있어.",
    createdAt: "2025-03-12T17:57:00",
  },
  {
    id: "m31",
    chatId: "c3",
    sender: "user",
    text: "정렬은 어떤 게 빨라?",
    createdAt: "2025-03-12T17:58:00",
  },
  {
    id: "m32",
    chatId: "c3",
    sender: "bot",
    text: "파이썬의 sort()는 Timsort 기반으로 빠르고 안정적이야.",
    createdAt: "2025-03-12T17:59:00",
  },
  {
    id: "m33",
    chatId: "c5",
    sender: "user",
    text: "SDLC 단계 기억 안 나.",
    createdAt: "2024-12-10T16:34:00",
  },
  {
    id: "m34",
    chatId: "c5",
    sender: "bot",
    text: "요구 분석 → 설계 → 구현 → 테스트 → 유지보수 순이야.",
    createdAt: "2024-12-10T16:35:00",
  },
  {
    id: "m35",
    chatId: "c5",
    sender: "user",
    text: "DB 정규화도 나오지?",
    createdAt: "2024-12-10T16:36:00",
  },
  {
    id: "m36",
    chatId: "c5",
    sender: "bot",
    text: "응. 이상 현상 줄이기 위해 정규화하는데, 보통 3NF까지 외워.",
    createdAt: "2024-12-10T16:37:00",
  },
  {
    id: "m37",
    chatId: "c5",
    sender: "user",
    text: "OSI 7계층은?",
    createdAt: "2024-12-10T16:38:00",
  },
  {
    id: "m38",
    chatId: "c5",
    sender: "bot",
    text: "물리 → 데이터링크 → 네트워크 → 전송 → 세션 → 표현 → 응용이야.",
    createdAt: "2024-12-10T16:39:00",
  },
  {
    id: "m39",
    chatId: "c4",
    sender: "user",
    text: "이산수학에서 집합이랑 부분집합 개념 다시 설명해줘.",
    createdAt: "2025-01-18T12:56:00",
  },
  {
    id: "m40",
    chatId: "c4",
    sender: "bot",
    text: "집합은 원소들의 모음이고, 부분집합은 원래 집합에 포함된 집합이야.",
    createdAt: "2025-01-18T12:57:00",
  },
  {
    id: "m41",
    chatId: "c4",
    sender: "user",
    text: "공집합도 부분집합이야?",
    createdAt: "2025-01-18T12:58:00",
  },
  {
    id: "m42",
    chatId: "c4",
    sender: "bot",
    text: "맞아. 모든 집합은 공집합을 부분집합으로 가져.",
    createdAt: "2025-01-18T12:59:00",
  },
  {
    id: "m43",
    chatId: "c6",
    sender: "user",
    text: "고차 함수가 뭐야?",
    createdAt: "2024-09-05T11:24:00",
  },
  {
    id: "m44",
    chatId: "c6",
    sender: "bot",
    text: "함수를 인자로 받거나 반환하는 함수야. 예: map, filter",
    createdAt: "2024-09-05T11:25:00",
  },
  {
    id: "m45",
    chatId: "c6",
    sender: "user",
    text: "reduce는 언제 써?",
    createdAt: "2024-09-05T11:26:00",
  },
  {
    id: "m46",
    chatId: "c6",
    sender: "bot",
    text: "배열의 모든 요소를 누적할 때 사용해.",
    createdAt: "2024-09-05T11:27:00",
  },
  {
    id: "m47",
    chatId: "c6",
    sender: "user",
    text: "함수형 프로그래밍 장점은?",
    createdAt: "2024-09-05T11:28:00",
  },
  {
    id: "m48",
    chatId: "c6",
    sender: "bot",
    text: "부작용이 적고, 테스트하기 쉬워.",
    createdAt: "2024-09-05T11:29:00",
  },
  {
    id: "m49",
    chatId: "c7",
    sender: "user",
    text: "클라우드 보안 책임은 누구야?",
    createdAt: "2024-04-23T19:39:00",
  },
  {
    id: "m50",
    chatId: "c7",
    sender: "bot",
    text: "공급자와 사용자 모두 책임을 나눠가져. 책임 공유 모델이라고 해.",
    createdAt: "2024-04-23T19:40:00",
  },
  {
    id: "m51",
    chatId: "c7",
    sender: "user",
    text: "IAM은 뭔데?",
    createdAt: "2024-04-23T19:41:00",
  },
  {
    id: "m52",
    chatId: "c7",
    sender: "bot",
    text: "Identity and Access Management. 접근 제어 시스템이야.",
    createdAt: "2024-04-23T19:42:00",
  },
  {
    id: "m53",
    chatId: "c7",
    sender: "user",
    text: "제로 트러스트란?",
    createdAt: "2024-04-23T19:43:00",
  },
  {
    id: "m54",
    chatId: "c7",
    sender: "bot",
    text: "어떤 요청도 기본적으로 신뢰하지 않는 보안 모델이야.",
    createdAt: "2024-04-23T19:44:00",
  },
  {
    id: "m55",
    chatId: "c8",
    sender: "user",
    text: "UX와 UI 차이 뭐였지?",
    createdAt: "2023-11-12T10:14:00",
  },
  {
    id: "m56",
    chatId: "c8",
    sender: "bot",
    text: "UX는 사용자 경험, UI는 화면 구성 요소야.",
    createdAt: "2023-11-12T10:15:00",
  },
  {
    id: "m57",
    chatId: "c8",
    sender: "user",
    text: "UX 잘 설계된 앱 예시?",
    createdAt: "2023-11-12T10:16:00",
  },
  {
    id: "m58",
    chatId: "c8",
    sender: "bot",
    text: "토스, 뱅크샐러드 등이 직관적이고 빠르게 작동해서 좋아.",
    createdAt: "2023-11-12T10:17:00",
  },
  {
    id: "m59",
    chatId: "c8",
    sender: "user",
    text: "UI 구성 원칙도 있었지?",
    createdAt: "2023-11-12T10:18:00",
  },
  {
    id: "m60",
    chatId: "c8",
    sender: "bot",
    text: "일관성, 가시성, 피드백이 핵심 원칙이야.",
    createdAt: "2023-11-12T10:19:00",
  },
  {
    id: "m61",
    chatId: "c9",
    sender: "user",
    text: "파이썬에서 그래프 어떻게 그려?",
    createdAt: "2023-07-07T09:09:00",
  },
  {
    id: "m62",
    chatId: "c9",
    sender: "bot",
    text: "matplotlib이나 seaborn 같은 라이브러리를 사용해.",
    createdAt: "2023-07-07T09:10:00",
  },
  {
    id: "m63",
    chatId: "c9",
    sender: "user",
    text: "히트맵도 만들 수 있어?",
    createdAt: "2023-07-07T09:11:00",
  },
  {
    id: "m64",
    chatId: "c9",
    sender: "bot",
    text: "seaborn의 heatmap 함수로 쉽게 만들 수 있어.",
    createdAt: "2023-07-07T09:12:00",
  },
  {
    id: "m65",
    chatId: "c9",
    sender: "user",
    text: "실습 예제 추천해줘.",
    createdAt: "2023-07-07T09:13:00",
  },
  {
    id: "m66",
    chatId: "c9",
    sender: "bot",
    text: "타이타닉 데이터셋으로 시각화 연습 많이 해.",
    createdAt: "2023-07-07T09:14:00",
  },
  {
    id: "m67",
    chatId: "c10",
    sender: "user",
    text: "코틀린에서 변수 선언 어떻게 해?",
    createdAt: "2023-02-28T11:54:00",
  },
  {
    id: "m68",
    chatId: "c10",
    sender: "bot",
    text: "val은 불변, var는 가변 변수 선언할 때 써.",
    createdAt: "2023-02-28T11:55:00",
  },
  {
    id: "m69",
    chatId: "c10",
    sender: "user",
    text: "null 허용은 어떻게?",
    createdAt: "2023-02-28T11:56:00",
  },
  {
    id: "m70",
    chatId: "c10",
    sender: "bot",
    text: "타입 뒤에 ?를 붙이면 nullable이야. 예: String?",
    createdAt: "2023-02-28T11:57:00",
  },
  {
    id: "m71",
    chatId: "c10",
    sender: "user",
    text: "확장 함수란?",
    createdAt: "2023-02-28T11:58:00",
  },
  {
    id: "m72",
    chatId: "c10",
    sender: "bot",
    text: "기존 클래스에 기능을 추가할 수 있게 해주는 문법이야.",
    createdAt: "2023-02-28T11:59:00",
  },
];
